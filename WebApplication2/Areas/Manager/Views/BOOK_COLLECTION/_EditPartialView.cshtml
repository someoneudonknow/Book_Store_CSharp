@model WebApplication2.Models.BOOK_COLLECTION

@{
    ViewBag.Title = "Edit";
}

<h2>Chỉnh sửa</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Thông tin bộ sách</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BookCollectionID)



<div class="form-group">
	@*@Html.LabelFor(model => model.BookCollectionName, htmlAttributes: new { @class = "control-label col-md-10" })*@
	<label class="control-label col-md-10 ">Tên bộ sách</label>

	<div id="editDuplicate" class="col-md-10">
		@Html.EditorFor(model => model.BookCollectionName, new { htmlAttributes = new { @class = "form-control", @onchange = "handleDuplicate()", @required = "required" } })
		@Html.ValidationMessageFor(model => model.BookCollectionName, "", new { @class = "text-danger" })
	</div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="editButton" type="submit" value="Cập nhật" class="btn btn-default" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="editButton" type="button" class="btn btn-primary" onclick="loadController(@Model.BookCollectionID)">Xóa</button>
        </div>
    </div>

    <div class="form-group">
        <div id="edit-error-message">
        </div>
    </div>

</div>
}




<script>
    function loadController(id) {
        var userResponse = confirm("Bạn có chắc muốn xóa bộ sưu tập này ??");
        if (userResponse == true) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/Manager/BOOK_COLLECTION/Delete',
                data: { id: id, __RequestVerificationToken: token },
                type: 'POST',
                success: function (data) {
                    if (data.redirectToAction) {
                        window.location.href = data.actionUrl;
                    } else {
                        $(".error-message").html(data);
                    }
                }
            });
        }

    }

</script>
<script>
    function handleDuplicate() {
        var bookCollectionName = $('#editDuplicate').find('#BookCollectionName').val();
        var listOfName = @Html.Raw(Json.Encode(ViewBag.usedName));
        console.log(listOfName)
        console.log(bookCollectionName)
        if (listOfName != null && listOfName.includes(bookCollectionName)) {
            $('#edit-error-message').html('<p style="color:red">Tên danh mục bị trùng</p>')
            $('#editButton').prop('disabled', true);
        } else {
            $('#edit-error-message').html('')
            $('#editButton').prop('disabled', false);
        }
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
