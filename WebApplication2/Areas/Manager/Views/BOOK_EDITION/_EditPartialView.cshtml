@model WebApplication2.Models.BOOK_EDITION

@{
	ViewBag.Title = "Edit";
}
@{
	int editionPrice = Convert.ToInt32(Model.EditionPrice);

	var selectList = ViewBag.BookCollectionID;
	foreach (SelectListItem item in selectList)
	{
		if (item.Value == Model.BookCollectionID.ToString())
		{
			item.Selected = true;
			break;
		}
	}
}

<h2>Chỉnh sửa</h2>


@using (Html.BeginForm("Edit", "BOOK_EDITION", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Thông tin sách</h4>
	<hr />

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.EditionID)


	<div class="row">
		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionName, htmlAttributes: new { @class = "control-label col-md-10" })*@
			<label class="control-label col-md-10 ">Tên sách</label>

			<div class="col-md-10">
				@Html.EditorFor(model => model.EditionName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EditionName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionAuthor, htmlAttributes: new { @class = "control-label col-md-10" })*@
			<label class="control-label col-md-10 ">Tên tác giả</label>

			<div class="col-md-10">
				@Html.EditorFor(model => model.EditionAuthor, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EditionAuthor, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionPrice, htmlAttributes: new { @class = "control-label col-md-10", @required = "required" })*@
			<label class="control-label col-md-10 ">Giá gốc</label>
			<div class="col-md-10">
				@*@Html.EditorFor(model => model.EditionPrice, new { htmlAttributes = new { @class = "form-control", oninput = "this.value = this.value.slice(0, 18)", type="number", step="0.01" } })*@

				<input class="form-control" id="EditionPrice" , name="EditionPrice" value="@((int)Model.EditionPrice)" required type="number" />
				@Html.ValidationMessageFor(model => model.EditionPrice, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionDescription, htmlAttributes: new { @class = "control-label col-md-10" })*@

			<label class="control-label col-md-10 ">Mô tả</label>

			<div class="col-md-10">
				@Html.EditorFor(model => model.EditionDescription, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EditionDescription, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionYear, htmlAttributes: new { @class = "control-label col-md-10" })*@
			<label class="control-label col-md-10 ">Năm xuất bản</label>

			<div class="col-md-10">
				@Html.EditorFor(model => model.EditionYear, new { htmlAttributes = new { @class = "form-control", type = "number", oninput = "this.value = this.value.slice(0, 4)" } })
				@Html.ValidationMessageFor(model => model.EditionYear, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group col-6">
			@*@Html.LabelFor(model => model.EditionPageCount, htmlAttributes: new { @class = "control-label col-md-10" })*@
			<label class="control-label col-md-10 ">Số trang sách</label>

			<div class="col-md-10">
				@Html.EditorFor(model => model.EditionPageCount, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EditionPageCount, "", new { @class = "text-danger" })
			</div>
		</div>


		<div class="form-group col-6">
			@Html.LabelFor(model => model.BookCollectionID, "Bộ sưu tập", htmlAttributes: new { @class = "control-label col-md-10" })
			<div class="col-md-10">
				<select name="BookCollectionID" class="form-control">
					@foreach (var item in selectList)
					{
						<option value="@item.Value" selected="@item.Selected">@item.Text</option>
					}
				</select>
			</div>
		</div>

		@if (ViewBag.CategoryList != null)
		{
			<div class="form-group col-6">

				<div class="col-md-10">
					<div>Danh mục</div>
					@foreach (var c in ViewBag.CategoryList)
					{
						if (ViewBag.SelectedCategoryList != null && ViewBag.SelectedCategoryList.Contains(c.CategoryID.ToString()))
						{
							<input checked="checked" type="checkbox" id="@c.CategoryID" name="@c.CategoryID" value="@c.CategoryID" />
							<label for="@c.CategoryID">@c.CategoryName.</label>
						}
						else
						{
							<input type="checkbox" id="@c.CategoryID" name="@c.CategoryID" value="@c.CategoryID" />
							<label for="@c.CategoryID">@c.CategoryName.</label>
						}
						<br />
					}

				</div>

			</div>
		}

		<div class="form-group col-6">
			<label for="editImageUpload">Chọn ảnh cho sách:</label>
			<input type="file" name="editImageUpload" id="editImageUpload" multiple accept="image/*">

			<div id="editPreview mt-1">
				@if (ViewBag.images.Count > 0)
				{
					foreach (var name in ViewBag.images)
					{
						<img src="~/Images/@name" style="width:49%; height:49% " />
					}
				}
			</div>
		</div>
	</div>
	<hr />
	<div class="form-group">
		<div class="">
			<input type="submit" value="Lưu" class="btn btn-default" />
			<button type="button" class="btn btn-primary" onclick="loadController(@Model.EditionID)">Xóa</button>
		</div>
	</div>
	<div class="form-group">
		<div class="error-message">
		</div>
	</div>
</div>
}
<script>
	function loadController(id) {
		var userResponse = confirm("Bạn có chắc muốn xóa sách này không này ?");
		if (userResponse == true) {
			var token = $('input[name="__RequestVerificationToken"]').val();
			$.ajax({
				url: '/Manager/BOOK_EDITION/Delete',
				data: { id: id, __RequestVerificationToken: token },
				type: 'POST',
				success: function (data) {
					if (data.redirectToAction) {
						window.location.href = data.actionUrl;
					} else {
						$(".error-message").html(data);
					}
				}
			});
		}

	}
</script>


<script>
	document.getElementById('editImageUpload').addEventListener('change', function () {
		var editPreview = document.getElementById('editPreview');
		console.log(editPreview)
		editPreview.innerHTML = '';
		var files = this.files;

		if (files.length !== 0) {
			for (var i = 0; i < files.length; i++) {
				var file = files[i];
				var reader = new FileReader();
				reader.onload = function () {
					var img = document.createElement('img');
					img.src = this.result;
					img.style.width = '49%';
					img.style.height = '49%';
					editPreview.appendChild(img);
				}
				reader.readAsDataURL(file);
			}
		}



	});
</script>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
